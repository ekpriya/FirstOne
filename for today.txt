form [formGroup]="loginForm" (ngSubmit)="onSubmit()">
  <div class="alert alert-success" *ngIf="successfull" role="alert">
          login user
        </div>
<div class="form-group">
  <label for="email">email</label>
  <input type="text" formControlName="email" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.email.errors }" >
  <div *ngIf="submitted && f.email.errors" class="invalid-feedback">
      <div *ngIf="f.email.errors.required">email is required</div>
  </div>
</div>
<div class="form-group">
<label for="password">password</label>
<input type="password" formControlName="password" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.password.errors }" >
<div *ngIf="submitted && f.password.errors" class="invalid-feedback">
    <div *ngIf="f.password.errors.required">passwordis required</div>
</div>
</div>

<div class="form-group">
  <button [disabled]="loading" class="btn btn-success">login</button>
  <button  class="btn btn-primary" routerLink="/">register</button>
 
</div>
</form>

   login   ts

import { Component, OnInit } from '@angular/core';
import { FormBuilder ,FormGroup,Validators} from '@angular/forms';
import { UserService } from '../user.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {
  loginForm: FormGroup;
  submitted = false;
  successfull=false;
  
  constructor(private formBuilder:FormBuilder,private userservices:UserService) {
    
  }
  
  ngOnInit() {
    
    this.loginForm = this.formBuilder.group({
      password:['',Validators.required],
      
      email: ['', [Validators.required, Validators.email]],
      
    });
  }
  
  get f()
  {
    return this.loginForm.controls;
  }
  data:any;
  onSubmit() 
  {
    this.submitted = true;
    if (this.loginForm.invalid) {
      return;
    }
    this.data={ 
      
      password:this.loginForm.value.password,
      email:this.loginForm.value.email,
      
    } 
    console.log(this.data)
    this.userservices.loginusers(this.data).subscribe(data=>{
      this.successfull=true;
      console.table(data)
    })
  }
}

register  html



<form [formGroup]="registerForm" (ngSubmit)="onSubmit()">
  <div class="alert alert-success" *ngIf="successfull" role="alert">
    registered user
  </div>
  <div class="form-group">
    <label for="firstname">firstname</label>
    <input type="text" formControlName="firstname" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.firstname.errors }" >
    <div *ngIf="submitted && f.firstname.errors" class="invalid-feedback">
      <div *ngIf="f.firstname.errors.required">firstname is required</div>
    </div>
  </div>
  <div class="form-group">
    <label for="lastname">lastname</label>
    <input type="text" formControlName="lastname" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.lastname.errors }" >
    <div *ngIf="submitted && f.lastname.errors" class="invalid-feedback">
      <div *ngIf="f.lastname.errors.required">lastname is required</div>
    </div>
  </div>
  <div class="form-group">
    <label for="email">email</label>
    <input type="text" formControlName="email" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.email.errors }" >
    <div *ngIf="submitted && f.email.errors" class="invalid-feedback">
      <div *ngIf="f.email.errors.required">email is required</div>
    </div>
  </div>
  <div class="form-group">
    <label for="password">password</label>
    <input type="password" formControlName="password" class="form-control" [ngClass]="{ 'is-invalid': submitted && f.password.errors }" >
    <div *ngIf="submitted && f.password.errors" class="invalid-feedback">
      <div *ngIf="f.password.errors.required">passwordis required</div>
    </div>
  </div>
  
  <div class="form-group">
    <button [disabled]="loading" class="btn btn-success">login</button>
    <button  class="btn btn-primary" routerLink="/">register</button>
    
  </div>
</form>


reister  ts



  import { Component, OnInit } from '@angular/core';
  import { FormBuilder ,FormGroup,Validators} from '@angular/forms';
  import { UserService } from '../user.service';
  
@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
 export class RegisterComponent implements OnInit {

  registerForm: FormGroup;
  submitted = false;
  successfull=false;
  
  constructor(private formBuilder:FormBuilder,private userservices:UserService) {
    
  }
  
  ngOnInit() {
    
    this.registerForm = this.formBuilder.group({
      password:['',Validators.required],
      
      email: ['', [Validators.required, Validators.email]],
      
    });
  }
  
  get f()
  {
    return this.registerForm.controls;
  }
  data:any;
  onSubmit() 
  {
    this.submitted = true;
    if (this.registerForm.invalid) {
      return;
    }
    this.data={ 
      
      password:this.registerForm.value.password,
      email:this.registerForm.value.email,
      
    } 
    console.log(this.data)
    this.userservices.registerusers(this.data).subscribe(data=>{
      this.successfull=true;
      console.table(data)
    })
  }
}